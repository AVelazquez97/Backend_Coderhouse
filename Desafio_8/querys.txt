Crear una base de datos llamada ecommerce que contenga dos colecciones: mensajes y productos
  use ecommerce;
  db.createCollection('mensajes');
  db.createCollection('productos');

1) Agregar 10 documentos con valores distintos a las colecciones mensajes y productos.
El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base
de datos MariaDB:

2) Definir las claves de los documentos en relación a los campos de las tablas de esa base. 
En el caso de los productos, poner valores al campo precio entre los 100 y 5000 pesos (eligiendo valores intermedios,
ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990):
  db.mensajes.insertMany([
    {autor: 'autor1@gmail.com', msg: 'mensaje1', fyh: '3/9/2022, 15:23:05'}, 
    {autor: 'autor2@gmail.com', msg: 'mensaje2', fyh: '3/9/2022, 15:23:10'}, 
    {autor: 'autor3@gmail.com', msg: 'mensaje3', fyh: '3/9/2022, 15:23:15'},
    {autor: 'autor4@gmail.com', msg: 'mensaje4', fyh: '3/9/2022, 15:23:20'}, 
    {autor: 'autor5@gmail.com', msg: 'mensaje5', fyh: '3/9/2022, 15:23:25'}, 
    {autor: 'autor6@gmail.com', msg: 'mensaje6', fyh: '3/9/2022, 15:23:30'},
    {autor: 'autor7@gmail.com', msg: 'mensaje7', fyh: '3/9/2022, 15:23:35'}, 
    {autor: 'autor8@gmail.com', msg: 'mensaje8', fyh: '3/9/2022, 15:23:40'}, 
    {autor: 'autor9@gmail.com', msg: 'mensaje9', fyh: '3/9/2022, 15:23:45'},
    {autor: 'autor10@gmail.com', msg: 'mensaje10', fyh: '3/9/2022, 15:23:50'}
  ]);

  db.productos.insertMany([
    {title: 'titulo1', price: 5000, thumbnail:'link1'},
    {title: 'titulo2', price: 500, thumbnail:'link2'},
    {title: 'titulo3', price: 4500, thumbnail:'link3'},
    {title: 'titulo4', price: 1500, thumbnail:'link4'},
    {title: 'titulo5', price: 2400, thumbnail:'link5'},
    {title: 'titulo6', price: 3200, thumbnail:'link6'},
    {title: 'titulo7', price: 3600, thumbnail:'link7'},
    {title: 'titulo8', price: 4200, thumbnail:'link8'},
    {title: 'titulo9', price: 700, thumbnail:'link9'},
    {title: 'titulo10', price: 4900, thumbnail:'link10'}
  ]);

3) Listar todos los documentos en cada colección:
  db.mensajes.find();
  db.productos.find();

4) Mostrar la cantidad de documentos almacenados en cada una de ellas:
  db.productos.estimatedDocumentCount();
  db.mensajes.estimatedDocumentCount();

5) Realizar un CRUD sobre la colección de productos:
    a) Agregar un producto más en la colección de productos:
      db.productos.insertOne({title: 'titulo11', price: 1800, thumbnail:'link11'});

    b) Realizar una consulta por nombre de producto específico:
      i) Listar los productos con precio menor a 1000 pesos.
        db.productos.find({"price": {$lt: 1000}}, {"title": 1, "_id": 0});

      ii) Listar los productos con precio entre los 1000 a 3000 pesos:
        db.productos.find({
          $and: [ 
              {
                "price": {$gte: 1000}
              },
              {
                "price": {$lte: 3000}
              } 
          ]
          }, 
          {
            "title": 1,
            "_id": 0
          }
        );
         
      iii) Listar los productos con precio mayor a 3000 pesos:
        db.productos.find({"price": {$gt: 3000}}, {"title": 1, "_id": 0});

      iv) Realizar una consulta que traiga sólo el nombre del tercer producto más barato:
        db.productos.find({}, { title: 1, _id: 0 }).skip(2).limit(1).sort({price: 1});

    c) Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100:
      db.productos.updateMany({"price":{$gte: 0}}, {$set: {"stock": 100}}, {upsert: true});

    d) Cambiar el stock a cero de los productos con precios mayores a 4000 pesos:
      db.productos.updateMany({"price":{$gt: 4000}}, {$set: {"stock": 0}});

    e) Borrar los productos con precio menor a 1000 pesos:
      db.productos.deleteMany({"price": {$lt: 1000}});


6. Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. 
Verificar que pepe no pueda cambiar la información:
  db.createUser(
    {
      user: "pepe",
      pwd: "asd456",
      roles: [
        { role: "read", db: "ecommerce" }
      ]
    }
  );

